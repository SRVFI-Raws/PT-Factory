name: Release

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  Build:
    strategy:
      matrix:
        python-version: ["3.11"]
        os-version: ["macos-latest", "windows-latest", "ubuntu-20.04"]

    runs-on: ${{ matrix.os-version }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: pdm-project/setup-pdm@v3
        name: Setup PDM
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          version: 2.11.1
          prerelease: false
          enable-pep582: false
          allow-python-prereleases: false
          update-python: true

      - name: Build
        run: |
          pdm install
          pdm run pyinstaller

      - name: windows
        if: matrix.os-version == 'windows-latest'
        run: |
          cd dist
          7z a -r PT-Factory-x86-Windows.zip ./*

      - name: upload-windows
        if: matrix.os-version == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: PT-Factory-x86-Windows
          path: dist/PT-Factory-x86-Windows.zip

      - name: macos
        if: matrix.os-version == 'macos-latest'
        run: |
          cd dist
          zip -9 -r PT-Factory-x86-MacOS.zip ./*

      - name: upload-macos
        if: matrix.os-version == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: PT-Factory-x86-MacOS
          path: dist/PT-Factory-x86-MacOS.zip

      - name: linux
        if: matrix.os-version == 'ubuntu-20.04'
        run: |
          cd dist
          zip -9 -r PT-Factory-x86-Linux.zip ./*

      - name: upload-linux
        if: matrix.os-version == 'ubuntu-20.04'
        uses: actions/upload-artifact@v3
        with:
          name: PT-Factory-x86-Linux
          path: dist/PT-Factory-x86-Linux.zip

  setup:
    runs-on: ubuntu-latest
    outputs:
      DATE: ${{ steps.get_date.outputs.DATE }}
    steps:
      - name: Get current date
        id: get_date
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

  Release:
    needs: [Build, setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: assets

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: assets

      - name: dist
        run: |
          mkdir dist
          mv assets/PT-Factory-x86-Windows/PT-Factory-x86-Windows.zip dist
          mv assets/PT-Factory-x86-MacOS/PT-Factory-x86-MacOS.zip dist
          mv assets/PT-Factory-x86-Linux/PT-Factory-x86-Linux.zip dist

      - name: Create Release and Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ needs.setup.outputs.DATE }}
          tag_name: ${{ needs.setup.outputs.DATE }}
          body: Auto Release.
          draft: false
          prerelease: false
          files: dist/*
